/**  pent-view.bento
 *
 *   View components for Pent.
 *
 *
 **/

site pent [=

    /---- site-level view options ----/
    
    int STANDARD_MODE = 0
    int TEXT_MODE = 1

    int view_mode(int mode) = mode 

    /---- session state ----/

    piece last_viewed_piece(piece p) = p
    
    

    /---- the view of views ----/
    
    view [=

        dynamic response piece(params{}) [=
            //log("view piece params: " + params);
            //log("   ...id: " + piece_id); 

            int piece_id = (int) params{"id"}
            pent.piece param_piece = (piece_id ? piece_for_id(piece_id) : piece_table{params{"name"}}) 

            if (param_piece) [=
                log("   ...found piece " + param_piece.name);
                piece_serializer(param_piece);
                eval(last_viewed_piece(: param_piece :));
            =] else if (!last_viewed_piece) [=
                eval(last_viewed_piece(: utah :));
            =]
             piece_serializer(last_viewed_piece);
        =]
        
        dynamic response game(params{}) [=
            board_view;
        =]
    =]


    base_page(*) show_page(params{}) [=
        boolean needs_login = false
        
        sub;
    =]


    show_page(*) show(params{}) [=
    
        show_page(*) piece(params{}) [=
            pent.piece param_piece = piece_for_id(2);
            log("showing " + param_piece.name);
            piece_view(param_piece);
        =]
    =]

    /---- piece attributes ----/
    
    
    /---- view css ----/
    
    pent_view_style [|
    
        .pent_table td {
            width: 4em;
            height: 4em;
            border-style: outset;
            border-width: 4px;
        }
    
        .pent_table {
            table-layout: fixed;
            color: #FFFFFF;
            background-color: #000000;
        }    
    
    |]


    /---- view components ----/

    component pent_view [=
        component_class = "view " + owner.type
        
        int x [?]
        int y [?]
    =]

    dynamic pent_view team_view(team_name, pent_team team, pent_team_played played) [=
        if (view_mode == TEXT_MODE) [=
            
        
        =] else [=
        
        
        =]    
     =]
    
    dynamic pent_view set_view(piece[] removed) [=
    
    =]
    
    
    dynamic pent_view board_view(pent_game game) [=

        [| <table class="pent_table"> |]
        for int i = 0 to 8 [=
            [| <tr> |]
            for int j = 0 to 8 [=
                [| <td></td> |]
            =]
            [| </tr> |]
        =]
        [| </table> |]
    =]

    dynamic pent_view piece_view(piece p) [=
        if (TEXT_MODE) [=
            view.piece(p);
        =] else [=
        
        =]
    =]

    /---- serializers ----/
    dynamic serializable(*) piece_serializer(str), (piece p) [=
        keep: int id        = p.id
        keep: name          = p.name
        keep: classic_name  = p.classic_name
        keep: int value     = p.value
        keep: int rotations = p.rotations
        keep: int chirality = p.chirality
        keep: int width     = p.width
        keep: int height    = p.height
        
        with (p) [=
            serialize;
        =] else [=
            this;
        =]
    =]
    
pser [=
    piece_serializer(utah);
=]    
    
=]
